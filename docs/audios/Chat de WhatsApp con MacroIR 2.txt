27/9/25, 8:14 - Los mensajes y las llamadas están cifrados de extremo a extremo. Solo las personas en este chat pueden leerlos, escucharlos o compartirlos. Obtén más información.
27/9/25, 8:14 - Creaste este grupo
27/9/25, 8:17 - Luciano Moffatt: <Multimedia omitido>
27/9/25, 8:18 - Luciano Moffatt: _cansado ya está ganto ya me cansé de escribir mensajes una vez y otra vez y volver a bajarlos los mismos mensajes muchas veces entonces por eso ahora voy a hacer un grupo el mensaje de macro y después empiezo otro grupo y así en la mañana estoy haciendo café estoy pensando en el tema este clave de la de la justification entonces ¿cuál es el tema? el tema es cuando hago los tests de una función entonces para registrar una función la función tiene que estar testeada entonces claro, lo que pasa es que vos vas a testearla cada vez que compilas el programa, cada vez que la corres es un poco ridículo ¿no es cierto? como habría que hacerlo, hay que hacer el testeo del momento de la compilación en el run, no creo que tiene que ser el momento del run tiene que ser en el run en el momento que voy a registrar la función Y vos chequeas a ver si existe un archivo de test de esa funci Y si existe bueno lo cargas y ves si hay prueba de que esta funci funciona O sea, la_...
27/9/25, 8:18 - Luciano Moffatt: 
_prueba es, digamos, el conjunto de argumentos, resultado y resultado del test. Si vos tenés eso y tenés que digamos, claro, que eso funcione, entonces vos podés usar esa función libremente. O cada tanto, y ahí está la clave, cada cuánto corro un nuevo test, porque debería hacer test permanente. Entonces los tests no son permanentes, vos no testeas desde la plataforma. O sea, los tests no los manejas desde, como se llama, el... Bueno, uno podría después agregar una función test, pero al principio la idea es que los estén íntegramente incluidos en la forma de correr de macro y r, o sea que sean parte integral. macro y r justamente son parte de la definición de tipos, como no van a ser integrales._
 -- Transcrito por zapia.com, tu IA personal

27/9/25, 8:21 - Luciano Moffatt: <Multimedia omitido>
27/9/25, 8:21 - Luciano Moffatt: 
_Bueno, entonces, ¿cómo sigue este asunto? Entonces queda, digamos, ¿cómo guardo los tests? Los tests los tengo que guardar en JSON, obviamente, en una carpeta que se llame justamente test o algo así. Y bueno, este... Ah, claro. Después yo lo que tengo que hacer de alguna manera correr test desde Catch2 para ver que esto funcione y eso es lo que me faltaría pensar cómo lo hago y eso es lo que no me queda más claro a ver vos lo que podés plantear es que bueno si esos test no existen bueno vos los corres entonces tiene que tener digamos una o sea sería como que la primera vez que vos corres macro IR corres los tests y los tests los corres simplemente a ver, cuando los corres al momento de registrar la función o al momento de correr la función por primera vez. Esa es una pregunta que tengo que resolver._
 -- Transcrito por zapia.com, tu IA personal

27/9/25, 8:22 - Luciano Moffatt: <Multimedia omitido>
27/9/25, 8:27 - Luciano Moffatt: Eliminaste este mensaje.
27/9/25, 8:27 - Luciano Moffatt: _Sí, lo razonable es que los tests solo corran al momento de inscribir la función o al terminar de inscribir todas las funciones corro todos los tests a la vez. Eso tendría que ver. Sí, sí está bien. Con lo cual podría haber una función que sea testear o algo así. entonces hemos construido todos los test de todas las funciones y eso podría ser el catch habría que ver, bueno si, si lo puedo hacer de manera que sea optativo hacerlo no está bien_
 -- Transcrito por zapia.com, tu IA personal
27/9/25, 8:28 - Luciano Moffatt: <Multimedia omitido>
27/9/25, 8:29 - Luciano Moffatt: _Entonces estamos registrando funciones que tienen que tener sus postconditions originales como para definir que esta función es una función, o sea, como forma de definición de la función tenés la postcondition. Y luego lo que tenés es la definición de objetos, que son combinaciones de funciones y variables que cumplen ciertas propiedades o postconditions. Ese es un nuevo objeto que tengo que crear en Macro R. Y bueno, tengo que tener, digamos, algún tipo de help o algo así que explique todo eso. O sea, tengo que poder explicar todas las postconditions. Entonces la pregunta es se explican esas conditions pueden ser escritas en cada digamos al momento de escribir una funci o el escrito que resulte de determinada operación sobre funciones. tengo que pensar un poco eso claro, bueno, si vos vas a vas a registrar muchas postconditions cada postcondition es una función también entonces claro esa la tenés que también posiblemente la podrías registrar en la en el_...
27/9/25, 8:29 - Luciano Moffatt: 
_command manager la pregunta es si vos registras la la función después la puedes recuperar estáticamente y es una buena pregunta_
 -- Transcrito por zapia.com, tu IA personal

27/9/25, 12:54 - Luciano Moffatt: <Multimedia omitido>
27/9/25, 12:55 - Luciano Moffatt: <Multimedia omitido>
27/9/25, 15:43 - Luciano Moffatt: _ok, estoy medio nervioso, no hay mucho pico en bola, a ver si me relajo un poco y se me sale algo bueno, entonces, ¿qué es lo que estoy pensando? ¿qué es lo que tengo que hacer? bueno, tengo que implementar los test dentro de LDSL, entonces, ¿cómo es el tema? Bueno, el tema es que vos tenés una evaluación de función, en realidad implica varias evaluaciones de función. Tenés primero una evaluación de función de si los argumentos están incluidos en el dominio, los argumentos, es decir, las preconditions son válidas, y después tienes que ver si las postconditions son válidas. Es decir que tenés todas esas evaluaciones. Ahora, el tema con las postconditions es que muchas veces la validez o invalidez de las postconditions no es todo o nada. Por ejemplo, si comparo números floating points, o sea, números reales, puede ser que no sean idénticos y sin embargo están suficientemente cerca. Entonces el tema es c defino lo de suficientemente cerca qui lo define en qu_...
27/9/25, 15:43 - Luciano Moffatt: 
_momento se introduce esa informaci Entonces en principio uno podr delegar esa tarea a el tester es decir, que el tester ya decida y me diga, bueno, pasa o no pasa el test. eso sería una forma de separar las ¿cómo se llaman? los concerns es decir, los concerns son las responsabilidades de una manera clara entonces eso es responsabilidad yo como testeador acá me dice esto pasa o no pasa pues la responsabilidad de eso está más arriba está en el testeo también podría ser que vos tengas test que se puedan ajustar es decir, vos puedas cambiar la precisión del test en alguna forma entonces claro, esa pregunta es claro Bueno, puede ser que el test Lea alguna variable del environment Por ejemplo, o sea, como yo le puedo Como puedo tunear los tests De acuerdo a A lo que quiera hacer O sea, tiene que haber, digamos Alguna, algún tipo de Variabilidad de los test, o sea Alguna, este, claro en alguna variable externa para definir los test_
 -- Transcrito por zapia.com, tu IA personal

29/9/25, 15:36 - Luciano Moffatt: <Multimedia omitido>
29/9/25, 15:44 - Luciano Moffatt: <Multimedia omitido>
29/9/25, 17:23 - Luciano Moffatt: _Bueno, con macro IR quedé en un punto de cierto estancamiento. Bueno, en principio lo que pasó es que estaba programando con codex y me quedé sin tokens, o sea, me quedé sin la posibilidad de continuar. Y había llegado a un punto donde lograba correr un comando simple, que era cargar unos parámetros, correr los parámetros con un modelo y guardar esos modelos y después esos datos, esas corridas, y después poder cargarlos. Y eventualmente, había quedado en que iba a hacer un test para ver si eso funcionaba en Continuous Integration y ahí me quedé sin toques bueno bien llegu a ese punto y ah ya no supe m Me qued clavado no pude hacer m nada Y recién el miércoles me vuelven a dar tokens. ¿Y qué pasa? Bueno, tengo una especie de sin sabor con Matroir, porque es como que laburo mucho y no avanzo mucho. O sea, todavía no llegué ni siquiera a plantear cuál es el... O sea, a plantear, a implementar el testing interno de macro IR. Es más, tengo mis dudas de si eso es_ _bueno hacerlo o no. O sea, había llegado más o menos a un esquema mental en el cual yo al momento de hacer lo que ser el pushback de un comando en ese momento tengo que testear que ese comando funciona c lo testeo Bueno lo testeo ahí la clave es tener el dominio de cada una de las variables de los argumentos, y entonces para una muestra del dominio de los argumentos, yo pruebo que el test funciona. Eso sería, y bueno, claro, el tema es que luego, ¿qué pasó? pasó que Codex me dio una complejidad un tonto más grande porque me planteó el tema de lo que se llama el oráculo en el cual no solamente tenés las postconditions sino tenés alguna complejidad mayor en las postconditions que es más o menos como cuando ocurren las postconditions y digamos, qué hacer con las postconditions que no son decisivas por ejemplo pero claro todo eso un poco te quiebra el tema de los tipos Porque vos pertenec al tipo o no pertenec digamos Al salirte de la lógica binaria, la cosa se_...
29/9/25, 17:23 - Luciano Moffatt: 
_complica, te lleva a un punto de no saber qué hacer, ¿no? De estasis. entonces eso es un tema que que claro la ventaja de simplemente tomar una postcondition a rajatabla bueno, ya está, digamos, lo aceptás o no lo aceptás si no, es como que bueno una lógica ternaria es un poco más compleja y bueno, habría que ver, es una posibilidad de usarlo pero pero es compleja un poco el tema, lo más fácil es simplemente implementar una lógica binaria y seguir acá hay unos loros cabeza negra que voy a grabar_
 -- Transcrito por zapia.com, tu IA personal

29/9/25, 17:23 - Luciano Moffatt: _Bueno, entonces estaba hablando de la lógica binaria, de la ternaria, y claro, claramente con una lógica binaria yo podría avanzar. El otro tema es que tengo el test continuo y entonces en ese test continuo yo tendría que no solamente hacer el test al momento de testear la función, sino hacerlo periódicamente. Cada tanto, digamos, testear que las postconditions se cumplen. Y eso, bueno, se podría hacer algún tipo de condición que sea o aleatoria o sistemática, uno de cada tantos se haga y uno podría hacer que, bueno, yo una de cada mil o una de cada cien operaciones, yo las postconditions. Ahora, eso tiene sentido cuando las post conditions están metidas dentro del programa, es decir, que todo el programa está justificado por dentro y la idea es que sea medio externa. Pero claro, si yo planteo, por ejemplo, que la evidencia en realidad la escribo dentro del lenguaje macro IR, es decir, como un for o algo así, un loop de lenguaje macro IR, entonces sí, yo_ _podría hacer esto un poco, hacer que las postconditions se testeen internamente. o testearlas, que se yo, por ejemplo, desde la otra posibilidad, desde como se llama esa function table, que era la otra cosa, la otra abstracción que yo había usado. Entonces esas son las dos posibilidades pero bueno todo eso un poco nos aleja de nuestro objetivo el objetivo macro IR cu es Bueno es tener cierta confianza de que lo que yo estoy las corridas que yo estoy haciendo son confiables. Y bueno, entonces, digamos, ahí volviendo un poco al punto de cuál es mi objetivo primario. Bueno, mi objetivo primario es exactamente ese, es tener confianza. mis corridas. Entonces, para tener confianza en mis corridas, yo tendría que ya sí o sí, digamos, testear la likelihood con la FIM y el score y todo eso. Eso tendría que ser, digamos, lo que tendría que hacer con mayor, digamos, como se dice, prioridad. O sea, poner prioridad en testear la Fisher Information Matrix y qué sé yo. Y_ _bueno, después eventualmente ver cómo, bueno, sí, la evidencia, ¿no? El algoritmo de evidencia de ver que es el de sampling y después el de evidencia, de ver que esos funcionen. Son tres etapas. Y la verdad que eso, al paso que voy, es muy lento, me va a llevar como un año hacerlo. o sea, eso es un poco, no la veo muy bien, o sea, tendría que meterle muy fuerte con eso, o sea, tener algo más compacto que me presione para hacerlo fuerte. Yo creo que tengo que eso presionar y bueno, y tener los test para esas tres cosas, digamos, ya decididos e implementados y todo ya antes de, a ver que estoy, estoy en septiembre, bueno antes del 15 de octubre tendr que tener todo eso ya hecho y bueno con eso podr enviar el manuscrito Si yo tengo test del Fisher de Fisher Information Matrix para ver que la likelihood de macro IR de macro IR macro DIR etc digamos, se cumple en ciertas condiciones en otras no, etc y tener el algoritmo de bueno, del sampling de evidencia de que_ _eso funciona, con esas tres cosas yo podría plantear un paper, yo creo que eso es de alguna manera como se dice, un material como para tener un paper y tendría que un poco todo esto de hotification dejarlo un poco en veremos, o sea, sí tenerlo digamos, desde esto que hice, desde la herramienta del DSL poder correr, digamos, estos tests y que sean corribles desde una plataforma, digamos, o sea, que alguien externamente los pueda correr y que sea estable y que pueda hacer un release, etcétera, etcétera. De todo eso sí, eso lo tengo que tener hecho de una manera que sea reproducible, esa es la palabra, tengo que hacer que tenga test reproducibles de la likelihood, el sampling de la likelihood y la evidencia, esos serían los tres test que tengo que tener, de la evidencia lo importante es más que nada el jumping rate y todas esas cosas que de alguna manera vos tengas ahí lo de evidencia es lo que tengo que ver pensar un poco como como lo testigo bueno ah es el_ _famoso cross se llamaba Cross evidence no es el no tienen un nombre no me acuerdo pero que vos me digas la evidencia de otros modelos, ¿no? La confusion matrix, esa es la que tengo que tener, tengo que...
29/9/25, 17:23 - Luciano Moffatt: tener la confusion matrix, con la Confusion Matrix de alguna manera bueno, pero ahí no sé si bueno, testeo la evidencia sí, pero para testear la evidencia bien esa es una buena pregunta, o sea, ¿cómo testeo bien la evidencia? no sé, eso me lo tengo que plantear bien y tengo que poder resolverlo o sea bueno, la evidencia es una es un likelihood de alguna manera tendría que ver lo mismo pero ahí yo lo que veo son samples claro, como yo medir la la evidencia misma no lo sé, tengo que pensar un poco, eso no me sabe pero bueno, más o menos eso tengo con macro IR claramente tengo que focalizarme en estos tres test de desfocalizar tanto lo de hotification simplemente por ahí correrlos desde desde comandos que sean externos quizás que después puedan volverse de_...
29/9/25, 17:23 - Luciano Moffatt: 
_hotification pero pero sí, tener eso esos experimentos ya corriendo cuanto antes Eso tiene que ser mi prioridad número uno, para tener esos experimentos corriendo._
 -- Transcrito por zapia.com, tu IA personal

29/9/25, 17:24 - Luciano Moffatt: Estancamiento y Complicaciones con Macro IR

- Estaba programando con Codex y me quedé sin tokens, lo que me impidió continuar.
- Había logrado correr un comando simple para cargar parámetros, correr modelos y guardar/cargar datos.
- No pude avanzar en testear si funcionaba en Continuous Integration por falta de tokens.
- Siento un sin sabor con Macro IR porque trabajo mucho y no avanzo.
- Tengo dudas sobre implementar el testing interno de Macro IR.
- Había pensado en testear comandos al hacer pushback, verificando el dominio de los argumentos.
- Codex complicó las cosas con el tema del oráculo y las postconditions, lo que afectó los tipos.
- La lógica ternaria de las postconditions es compleja, mientras que la lógica binaria es más fácil de implementar.

-- Resumido por zapia.com, tu IA personal
29/9/25, 17:25 - Luciano Moffatt: Prioridades con Macro IR: Tests de Likelihood, Sampling y Evidencia

- Necesito testear la likelihood con la FIM y el score con prioridad.
- Debo testear el algoritmo de evidencia de sampling.
- Es crucial tener tests reproducibles de la likelihood, el sampling de la likelihood y la evidencia.
- En la evidencia, lo importante es el jumping rate y la confusion matrix.
- Debo enfocarme en estos tres tests y dejar en veremos la hotification, corriendo los tests desde comandos externos.

-- Resumido por zapia.com, tu IA personal
